package dao;

import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.BoardVO;
import domain.PagingVO;
import orm.DatabaseBuilder;
import service.BoardServiceImpl;

public class BoardDAOImpl implements BoardDAO {

	//로그 객체 선언
	private static final Logger log = LoggerFactory.getLogger(BoardServiceImpl.class);
	//DB연결
	private SqlSession sql;
	private final String NS = "BoardMapper."; // namespace.id
	
	public BoardDAOImpl() {
		new DatabaseBuilder();
		sql = DatabaseBuilder.getFactory().openSession();
	}
	
	@Override
	public int insert(BoardVO bvo) {
		log.info("dao insert start");
		log.info("다오임플 bvo는" + bvo);
		int isOk = sql.insert(NS+"add",bvo);
		if(isOk>0) {
			sql.commit();
		}
		return isOk;
	}

	@Override
	public int getTotalCount(PagingVO pgvo) {
		log.info("보드다오임플의 pgvo는 " + pgvo );
		return sql.selectOne(NS+"cnt",pgvo);
	}

	@Override
	public List<BoardVO> getPageList(PagingVO pgvo) {
		log.info("보드다오임플의 pgvo는 " + pgvo );
		return sql.selectList(NS+"page", pgvo);
	}

	@Override
	public BoardVO selectOne(int bno) { //디테일 페이지를 볼떄임
		log.info("dao selectOne 진입");
		// 디테일 페이지를 볼때 1번에 2가지 mapper를 실햄함
		sql.update(NS+"views", bno);  //
		sql.commit();
		return sql.selectOne(NS+"one", bno);
	}

	@Override
	public int update(BoardVO bvo) {
		log.info("dao임플의 update()진입");
		int isOk = sql.update(NS+"upd", bvo);
		log.info("dao임플의 isOk " + isOk);
		log.info("dao임플의 bvo "+ bvo);
		if(isOk>0) {
			sql.commit();
		}
		return isOk;
	}

	@Override
	public int delete(int bno) {
		log.info("dao임플의  delete(int bno)진입");
		int isOk = sql.delete(NS+"del", bno);
		if(isOk>0) {
			sql.commit();
		}
		return isOk;
	}
 
}
